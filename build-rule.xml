<!--
    1. caja 对html，css处理的可配置化
    2. cajafilter为默认目标
    3. 不同配置需要修改pluginc和MinifiedJs target

 -->



<project name="caja" default="cajafilter" basedir="."
         xmlns:artifact="urn:maven-artifact-ant">


    <import file="base-config.xml" />


    <target name="cajafilter" depends="MinifiedJs">
    </target>


    <target name="pluginc" depends="dirs,PluginCompiler,tools"
            description="Build the plugin compiler and other main classes">
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
            <src path="${src}"/>
            <classpath refid="classpath.compile"/>
            <include name="**/caja/opensocial/*.java"/>
            <include name="**/caja/opensocial/applet/ExpressionLanguageStage.java"/>
            <include name="**/caja/plugin/*Main.java"/>
        </javac>
        <!-- Generate a schema of CSS properties for client side CSS validation. -->
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
            <src path="${src}"/>
            <classpath refid="classpath.compile"/>
            <include name="**/caja/lang/css/CssPropertyPatterns.java"/>
            <include name="**/caja/lang/css/HtmlDefinitions.java"/>
            <include name="**/caja/tools/EnumsToJs.java"/>
        </javac>

        <!--rule for wangpu start-->
        <genrule class="com.google.caja.lang.css.CssPropertyPatterns$Builder">
            <output file="${lib}/com/google/caja/plugin/wangpu/css-defs.js"/>
            <input file="${src}/com/google/caja/lang/css/wangpu/css-extensions.json"/>
            <depend file="${src}/com/google/caja/lang/css/wangpu/css21.json"/>
            <depend file="${src}/com/google/caja/lang/css/wangpu/css21-defs.json"/>
            <depend file="${src}/com/google/caja/lang/css/wangpu/css21-whitelist.json"/>
            <depend file="${src}/com/google/caja/lang/css/wangpu/css-extensions.json"/>
            <depend file="${src}/com/google/caja/lang/css/wangpu/css-extensions-defs.json"/>
            <depend
                    file="${src}/com/google/caja/lang/css/wangpu/css-extensions-whitelist.json"/>
            <input file="${src}/com/google/caja/lang/css/wangpu/css21-fns.json"/>
            <depend file="${src}/com/google/caja/lang/css/wangpu/css21-fns-defs.json"/>
            <depend file="${src}/com/google/caja/lang/css/wangpu/css21-fns-whitelist.json"/>

            <depend file="${src}/com/google/caja/lang/css/cssPropertyPatterns.java"/>
        </genrule>
        <genrule class="com.google.caja.lang.html.HtmlDefinitions$Builder">
            <output file="${lib}/com/google/caja/plugin/wangpu/html4-defs.js"/>
            <input
                    file="${src}/com/google/caja/lang/html/wangpu/html4-elements-extensions.json"/>
            <depend
                    file="${src}/com/google/caja/lang/html/wangpu/html4-elements.json"/>
            <depend
                    file="${src}/com/google/caja/lang/html/wangpu/html4-elements-defs.json"/>
            <depend
                    file="${src}/com/google/caja/lang/html/wangpu/html4-elements-extensions-defs.json"/>
            <depend
                    file="${src}/com/google/caja/lang/html/wangpu/html4-elements-extensions-whitelist.json"/>
            <depend
                    file="${src}/com/google/caja/lang/html/wangpu/html4-elements-whitelist.json"/>
            <input
                    file="${src}/com/google/caja/lang/html/wangpu/html4-attributes-extensions.json"
                    />
            <depend file="${src}/com/google/caja/lang/html/wangpu/html4-attributes.json"/>
            <depend
                    file="${src}/com/google/caja/lang/html/wangpu/html4-attributes-defs.json"/>
            <depend
                    file="${src}/com/google/caja/lang/html/wangpu/html4-attributes-extensions-defs.json"/>
            <depend
                    file="${src}/com/google/caja/lang/html/wangpu/html4-attributes-whitelist.json"/>
            <depend file="${src}/com/google/caja/lang/html/HtmlDefinitions.java"/>
        </genrule>
        <!--rule for wangpu end-->

    </target>

    <target name="MinifiedJs" depends="pluginc">
        <transform>
            <output file="${lib}/com/google/caja/plugin/html-sanitizer-minified.js"
                    language="javascript" renderer="minify"/>
            <output file="${lib}/com/google/caja/plugin/html-sanitizer-bundle.js"
                    language="javascript" renderer="concat"/>
            <input file="${lib}/com/google/caja/plugin/html4-defs.js"/>
            <input file="${src}/com/google/caja/plugin/html-sanitizer.js"/>
        </transform>
        <transform>
            <output file="${lib}/com/google/caja/plugin/wangpu/es53-taming-frame-min.js"
                    language="javascript" renderer="minify"/>
            <output file="${lib}/com/google/caja/plugin/wangpu/es53-taming-frame.js"
                    language="javascript" renderer="concat"/>
            <input file="${src}/com/google/caja/enhance-error.js"/>
            <input file="${third_party}/js/json_sans_eval/json_sans_eval.js"/>
            <input file="${src}/com/google/caja/es53.js"/>
            <input file="${src}/com/google/caja/plugin/unicode.js"/>
            <input file="${lib}/com/google/caja/plugin/wangpu/css-defs.js"/>
            <input file="${lib}/com/google/caja/plugin/html4-defs.js"/>
            <input file="${src}/com/google/caja/plugin/html-sanitizer.js"/>
            <input file="${src}/com/google/caja/plugin/html-emitter.js"/>
            <input file="${src}/com/google/caja/plugin/bridal.js"/>
            <input file="${src}/com/google/caja/plugin/cssparser.js"/>
            <input file="${src}/com/google/caja/plugin/domita.js"/>
            <input file="${src}/com/google/caja/plugin/uri.js"/>
            <input file="${src}/com/google/caja/cajita-promise.js"/>
            <input file="${src}/com/google/caja/plugin/json-rest-transport.js"/>
            <input file="${src}/com/google/caja/plugin/cajoling-service-client.js"/>
            <input file="${src}/com/google/caja/plugin/taming-frame.js"/>
            <input file="${src}/com/google/caja/plugin/caja-iframe-done.js"/>
        </transform>
        <transform>
            <output file="${lib}/com/google/caja/plugin/es53-guest-frame-min.js"
                    language="javascript" renderer="minify"/>
            <output file="${lib}/com/google/caja/plugin/es53-guest-frame.js"
                    language="javascript" renderer="concat"/>
            <input file="${src}/com/google/caja/enhance-error.js"/>
            <input file="${third_party}/js/json_sans_eval/json_sans_eval.js"/>
            <input file="${src}/com/google/caja/es53.js"/>
            <input file="${src}/com/google/caja/plugin/uri.js"/>
            <input file="${src}/com/google/caja/cajita-promise.js"/>
            <input file="${src}/com/google/caja/plugin/prepare-modules.js"/>
            <input file="${src}/com/google/caja/plugin/load-module.js"/>
            <input file="${src}/com/google/caja/plugin/caja-iframe-done.js"/>
        </transform>
        <transform>
            <output file="${lib}/com/google/caja/plugin/module-promise-minified.js"
                    language="javascript" renderer="minify"/>
            <input file="${src}/com/google/caja/plugin/uri.js"/>
            <input file="${src}/com/google/caja/cajita-module-orig.js"/>
            <input file="${src}/com/google/caja/cajita-promise.js"/>
        </transform>
        <concat destfile="${lib}/com/google/caja/ses/initSES.js">
            <!-- Makes initSES.js -->
            <filelist>
                <file name="${src}/com/google/caja/ses/repairES5.js"/>
                <file name="${src}/com/google/caja/ses/WeakMap.js"/>
                <file name="${src}/com/google/caja/ses/whitelist.js"/>
                <file name="${src}/com/google/caja/ses/atLeastFreeVarNames.js"/>
                <file name="${src}/com/google/caja/ses/startSES.js"/>
                <file name="${src}/com/google/caja/ses/hookupSES.js"/>
            </filelist>
        </concat>
        <transform>
            <!-- Makes initSES-minified.js -->
            <output file="${lib}/com/google/caja/ses/initSES-minified.js"
                    language="javascript" renderer="minify"/>
            <input file="${src}/com/google/caja/ses/repairES5.js"/>
            <input file="${src}/com/google/caja/ses/WeakMap.js"/>
            <input file="${src}/com/google/caja/ses/whitelist.js"/>
            <input file="${src}/com/google/caja/ses/atLeastFreeVarNames.js"/>
            <input file="${src}/com/google/caja/ses/startSES.js"/>
            <input file="${src}/com/google/caja/ses/hookupSES.js"/>
        </transform>
    </target>

    <target name="dirs">
        <mkdir dir="${reports}"/>
        <mkdir dir="${docs}"/>
        <mkdir dir="${instr}"/>
        <mkdir dir="${jars}"/>
        <mkdir dir="${lib}"/>
        <mkdir dir="${www}"/>
        <mkdir dir="${war}"/>
        <mkdir dir="${maven}"/>
        <mkdir dir="${third_party}/java/htmlparser/lib"/>
    </target>

    <target name="tools" depends="PluginCompiler">
        <!-- Now that we have the compiler, build ant task wrappers -->
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5"
               excludes="${tools.ancillary.excludes}">
            <src path="${src}"/>
            <classpath refid="classpath.tools"/>
            <include name="**/caja/plugin/BuildServiceImplementation.java"/>
            <include name="**/caja/tools/*.java"/>
            <include name="**/caja/ancillary/**/*.java"/>
            <compilerarg line="-Xlint:deprecation"/>
            <compilerarg line="-Xlint:unchecked"/>
        </javac>
        <!-- Copy supporting javascript to lib -->
        <copy todir="${lib}">
            <fileset dir="${third_party}">
                <include name="js/jqueryjs/runtest/env.js"/>
            </fileset>
            <fileset dir="${src}">
                <include name="**/caja/ancillary/jsdoc/jsdoc.js"/>
            </fileset>
            <fileset dir="${tests}">
                <include name="**/caja/plugin/console-stubs.js"/>
            </fileset>
        </copy>
        <taskdef name="transform" classname="com.google.caja.tools.TransformAntTask"
                 classpathref="classpath.run"/>
        <taskdef name="innocent" classname="com.google.caja.tools.InnocentAntTask"
                 classpathref="classpath.run"/>
        <taskdef name="genrule" classname="com.google.caja.tools.GenRuleAntTask"
                 classpathref="classpath.run"/>
        <taskdef name="summarize" classname="com.google.caja.tools.TestSummary"
                 classpathref="classpath.tests.run"/>
        <copy todir="${lib}">
            <fileset dir="${src}">
                <include name="**/caja/ancillary/**/*.js"/>
                <include name="**/caja/ancillary/**/*.json"/>
                <include name="**/caja/ancillary/**/*.txt"/>
                <include name="**/caja/ancillary/**/*.css"/>
                <include name="**/caja/ancillary/**/*.html"/>
                <include name="**/caja/ancillary/**/*.gif"/>
            </fileset>
        </copy>
    </target>

    <target name="PluginCompiler"
            depends="CssParser,HtmlParser,Quasiliterals,Rendering,Schemas">
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
            <src path="${src}"/>
            <classpath refid="classpath.compile"/>
            <classpath refid="classpath.gwt"/>
            <include name="**/caja/plugin/*.java"/>
            <include name="**/caja/plugin/stages/*.java"/>
            <include name="**/caja/plugin/templates/*.java"/>

            <exclude name="**/caja/plugin/*Main.java"/>
            <exclude name="**/caja/plugin/BuildServiceImplementation.java"/>
            <compilerarg line="-Xlint:unchecked"/>
        </javac>
        <copy todir="${lib}">
            <fileset dir="${third_party}"/>
            <fileset dir="${src}">
                <include name="**/caja/cajita-module-orig.js"/>
                <include name="**/caja/cajita-promise.js"/>
                <include name="**/caja/es53.js"/>
                <include name="**/caja/console.js"/>
                <include name="**/caja/log-to-console.js"/>
                <include name="**/caja/plugin/bridal.js"/>
                <include name="**/caja/plugin/caja-gadget.css"/>
                <include name="**/caja/plugin/cssparser.js"/>
                <include name="**/caja/plugin/domita.js"/>
                <include name="**/caja/plugin/caja.js"/>
                <include name="**/caja/plugin/host-tools.js"/>
                <include name="**/caja/plugin/html-emitter.js"/>
                <include name="**/caja/plugin/html-sanitizer.js"/>
                <include name="**/caja/plugin/plugin-base.js"/>
                <include name="**/caja/plugin/templates/*.json"/>
                <include name="**/caja/plugin/unicode.js"/>
                <include name="**/caja/plugin/uri.js"/>
            </fileset>

            <!-- These came from AllTests; They are moved here to reduce the "results
                       in jars depend on whether tests were built" problem -->
            <fileset dir="${src}">
                <include name="**/caja/ancillary/jsdoc/*.js"/>
            </fileset>
        </copy>
    </target>

    <target name="Config" depends="Reporting">
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
            <src path="${src}"/>
            <classpath refid="classpath.compile"/>
            <include name="**/caja/config/*.java"/>
            <compilerarg line="-Xlint:unchecked"/>
        </javac>
    </target>

    <target name="Schemas" depends="dirs,Config">
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
            <src path="${src}"/>
            <classpath refid="classpath.compile"/>
            <include name="**/caja/lang/*/*.java"/>
            <compilerarg line="-Xlint:unchecked"/>
        </javac>
        <copy todir="${lib}">
            <fileset dir="${src}">
                <include name="**/caja/lang/*/*.json"/>
            </fileset>
        </copy>
    </target>

    <target name="CssParser" depends="ParserCore,dirs">
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
            <src path="${src}"/>
            <classpath refid="classpath.compile"/>
            <include name="**/caja/parser/css/*.java"/>
            <compilerarg line="-Xlint:unchecked"/>
        </javac>
    </target>

    <target name="HtmlParser" depends="ParserCore,dirs">
        <javac destdir="${third_party}/java/htmlparser/lib" debug="true"
               target="1.5" source="1.5">
            <src path="${third_party}/java/htmlparser/src"/>
            <classpath refid="classpath.compile"/>
            <include name="**/*.java"/>
            <exclude name="nu/validator/htmlparser/dom/**/*.java"/>
            <exclude name="nu/validator/htmlparser/extra/**/*.java"/>
            <exclude name="nu/validator/htmlparser/io/**/*.java"/>
            <exclude name="nu/validator/htmlparser/sax/**/*.java"/>
            <exclude name="nu/validator/htmlparser/xom/**/*.java"/>
            <compilerarg line="-Xlint:none"/>
        </javac>
        <jar basedir="${third_party}/java/htmlparser/src/"
             destfile="${jars}/htmlparser-src.jar">
            <include name="**/*.java"/>
            <exclude name="nu/validator/htmlparser/dom/**/*.java"/>
            <exclude name="nu/validator/htmlparser/extra/**/*.java"/>
            <exclude name="nu/validator/htmlparser/io/**/*.java"/>
            <exclude name="nu/validator/htmlparser/sax/**/*.java"/>
            <exclude name="nu/validator/htmlparser/xom/**/*.java"/>
        </jar>
        <jar destfile="${jars}/htmlparser.jar"
             basedir="${third_party}/java/htmlparser/lib"/>
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
            <src path="${src}"/>
            <classpath refid="classpath.compile"/>
            <include name="**/caja/parser/html/*.java"/>
            <compilerarg line="-Xlint:unchecked"/>
        </javac>
    </target>

    <target name="JsParser" depends="ParserCore,dirs">
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
            <src path="${src}"/>
            <classpath refid="classpath.compile"/>
            <include name="**/caja/parser/ParserBase.java"/>
            <include name="**/caja/parser/js/**/*.java"/>
            <compilerarg line="-Xlint:unchecked"/>
        </javac>
    </target>

    <target name="Quasiliterals" depends="JsParser,dirs">
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
            <src path="${src}"/>
            <classpath refid="classpath.compile"/>
            <include name="**/caja/parser/quasiliteral/*.java"/>
        </javac>
    </target>

    <target name="ParserCore" depends="Primitives,Reporting,Lexer,dirs">
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
            <src path="${src}"/>
            <classpath refid="classpath.compile"/>
            <include name="**/caja/parser/*.java"/>
            <exclude name="**/caja/parser/ParserBase.java"/>
            <exclude name="**/caja/parser/ParserContext.java"/>
            <compilerarg line="-Xlint:unchecked"/>
        </javac>
    </target>

    <target name="Lexer" depends="Primitives,Reporting,dirs">
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
            <src path="${src}"/>
            <classpath refid="classpath.compile"/>
            <include name="**/caja/lexer/*.java"/>
            <include name="**/caja/lexer/escaping/*.java"/>
            <exclude name="**/caja/lexer/ExternalReference.java"/>
            <exclude name="**/caja/lexer/FilePosition.java"/>
            <exclude name="**/caja/lexer/InputSource.java"/>
            <compilerarg line="-Xlint:unchecked"/>
        </javac>
    </target>

    <target name="Reporting" depends="Primitives,dirs">
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
            <src path="${src}"/>
            <classpath refid="classpath.compile"/>
            <include name="**/caja/CajaException.java"/>
            <include name="**/caja/reporting/*.java"/>
            <exclude name="**/caja/reporting/MessageContext.java"/>
            <exclude name="**/caja/reporting/MessagePart.java"/>
            <exclude name="**/caja/reporting/RenderContext.java"/>
            <exclude name="**/caja/reporting/Renderable.java"/>
            <compilerarg line="-Xlint:unchecked"/>
        </javac>
    </target>

    <target name="Rendering" depends="Lexer,Reporting">
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
            <src path="${src}"/>
            <classpath refid="classpath.compile"/>
            <include name="**/caja/render/*.java"/>
            <compilerarg line="-Xlint:unchecked"/>
        </javac>
    </target>

    <target name="Primitives" depends="dirs">
        <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
            <src path="${src}"/>
            <classpath refid="classpath.compile"/>
            <include name="**/caja/lexer/ExternalReference.java"/>
            <include name="**/caja/lexer/FilePosition.java"/>
            <include name="**/caja/lexer/InputSource.java"/>
            <include name="**/caja/reporting/MessageContext.java"/>
            <include name="**/caja/reporting/MessagePart.java"/>
            <include name="**/caja/reporting/RenderContext.java"/>
            <include name="**/caja/reporting/Renderable.java"/>
            <include name="**/caja/util/*.java"/>
            <compilerarg line="-Xlint:unchecked"/>
        </javac>
    </target>

</project>
